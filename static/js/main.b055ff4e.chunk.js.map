{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","App.js","index.js"],"names":["module","exports","ContactList","contacts","onRemoveContact","className","styles","TaskList","map","contact","TaskList_item","name","number","TaskList_button","type","onClick","id","Filter","value","onChangeFilter","style","Serch","SerchInput","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","placeholder","TaskEditor_button","Component","App","baseContacts","filter","addContact","task","searchSameName","cont","includes","searchSameNumber","alert","length","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b055ff4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__1RfMO\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__1uMzC\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__zM0Mp\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__2yh3N\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__sujSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__32fXK\",\"TaskList_item\":\"ContactList_TaskList_item__2doY5\",\"completed\":\"ContactList_completed__1ZKKI\",\"TaskList_text\":\"ContactList_TaskList_text__3lgPB\",\"TaskList_actions\":\"ContactList_TaskList_actions__3wN1a\",\"TaskList_button\":\"ContactList_TaskList_button__1nIJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Serch\":\"Filter_Serch__16CPo\",\"SerchInput\":\"Filter_SerchInput__3RNXV\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={styles.TaskList}>\r\n    {contacts.map((contact) => (\r\n      <li className={styles.TaskList_item} key={contact.id}>\r\n        {contact.name} : {contact.number}\r\n        {\r\n          <button\r\n            className={styles.TaskList_button}\r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <label className={style.Serch}>Find contacts by name</label>\r\n      <input\r\n        className={style.SerchInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\r\n        <label className={styles.TaskEditor_label}>\r\n          Name\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.TaskEditor_label}>\r\n          Number\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"tel\"\r\n            placeholder=\"123-45-67-89-0\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.TaskEditor_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport baseContacts from \"./dataBase/baseContacts.json\";\n\nexport default class App extends Component {\n  state = {\n    contacts: baseContacts,\n    filter: \"\",\n  };\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    const searchSameNumber = this.state.contacts\n      .map((cont) => cont.number)\n      .includes(task.number);\n\n    if (searchSameName || searchSameNumber) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else if (task.number.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemoveContact={this.removeContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}